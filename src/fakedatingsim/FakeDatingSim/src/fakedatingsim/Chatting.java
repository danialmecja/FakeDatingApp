package fakedatingsim;

import java.awt.Color;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Rais
 */
public class Chatting extends javax.swing.JFrame {
    
    private TrollMessage troll = new TrollMessage();
    private FriendZoneUser user;
    private FriendZoneUser person;
    private Encryption e; 
    private String[][] botConvo = new String[15][1];
    private int count = 0;
    private boolean exitChat = false;

    /**
     * Creates new form Chatting
     */
    public Chatting(FriendZoneUser user, FriendZoneUser person) {
        initComponents();
        getContentPane().setBackground(Color.PINK);
        this.user = user;
        this.person = person;
        e = new Encryption(user, person);
        setBot();
        
        File f = new File(user.getFirstName()+person.getFirstName()+".txt");
        if (f.exists()){
            getOldChat();
        }
        
    }
    public Chatting() {
        setBot();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        chatInput = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        chatLog = new javax.swing.JTextArea();
        exitButon = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        chatInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chatInputActionPerformed(evt);
            }
        });

        chatLog.setColumns(20);
        chatLog.setRows(5);
        jScrollPane1.setViewportView(chatLog);

        exitButon.setText("Exit Chat");
        exitButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(chatInput, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(exitButon)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chatInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exitButon))
                .addGap(41, 41, 41))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void chatInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chatInputActionPerformed
        chatLog.setText(chatLog.getText() + "\n" + user.getFirstName() + ": " + troll.changeMessage(chatInput.getText()) );
        chatInput.setText("");
        if(!exitChat){
            if(troll.getChangedWords() == 0)
                count++;
            else
                count += troll.getChangedWords();
            if(count > 14){
                chatLog.setText(chatLog.getText() + "\n" + "Sorry but i dont think we are compatible");
                exitChat = true;
            }    
            else
                chatLog.setText(chatLog.getText() + "\n" +  person.getFirstName() + ": " + botConvo[count][0]);
        }
         try {
            FileWriter fWrite = new FileWriter(user.getFirstName()+person.getFirstName()+".txt");
            BufferedWriter bWrite = new BufferedWriter(fWrite);
            if(exitChat)
                bWrite.write(0 + "\n");
            else
                bWrite.write(1 + "\n");
            bWrite.write(e.getEncryption(chatLog.getText()) + "\n");
            bWrite.close();

        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_chatInputActionPerformed

    public void getOldChat(){
        String line;
        String chat = "";
        try{
            FileReader fr = new FileReader(user.getFirstName()+person.getFirstName()+".txt");
            BufferedReader br = new BufferedReader(fr);
            int i = Integer.parseInt(br.readLine());
            if(i == 0)
                exitChat = true;
            else
                exitChat = false;
            while((line =  br.readLine()) != null ){
                chat += e.getMessage(line);
            }
            br.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Chatting.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Chatting.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println(chat);
        chatLog.setText(chat);
    }
    
    private void exitButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButonActionPerformed
        dispose();
    }//GEN-LAST:event_exitButonActionPerformed
    
    public void setBot(){
        try{
            BufferedReader br = new BufferedReader(new FileReader("botConvo.txt"));
            for(int i =0; i<15; i++){
                botConvo[i][0] = br.readLine();
            }
        }catch(FileNotFoundException ex){
            System.out.println("File not found");
        } catch (IOException ex) {
            Logger.getLogger(TrollMessage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void setChatLog(){
        String chat = "", line;
        try{
            FileReader fRead = new FileReader(user.getFirstName()+person.getFirstName()+".txt");
            BufferedReader bRead = new BufferedReader(fRead);
            while((line = bRead.readLine()) != null){
                chat += e.getMessage(line) + "\n";
                line = bRead.readLine();
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Chatting.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Chatting.class.getName()).log(Level.SEVERE, null, ex);
        }
        chatLog.setText(chat);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Chatting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Chatting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Chatting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Chatting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Chatting().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField chatInput;
    private javax.swing.JTextArea chatLog;
    private javax.swing.JButton exitButon;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
